<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="SYDH物联网平台压力测试计划(完整接口覆盖)" enabled="true">
      <stringProp name="TestPlan.comments">SYDH物联网平台50万设备压力测试 - 根据最新接口清单设计
      
测试接口覆盖范围:
1. 设备管理接口 ⭐⭐⭐⭐⭐
   - POST /iot/device (设备注册)
   - GET /iot/device/list (设备列表查询)
   - GET /iot/device/{deviceId} (设备详情查询)
   - GET /iot/device/getDeviceBySerialNumber/{serialNumber} (按序列号查询)
   - GET /iot/device/runningStatus (运行状态查询)
   - GET /iot/device/statistic (设备统计)
   - PUT /iot/device/reset/{serialNumber} (状态重置)

2. 设备数据接口 ⭐⭐⭐⭐⭐
   - POST /iot/runtime/service/invoke (数据上报-最高频)
   - POST /iot/runtime/service/invokeReply (指令下发)
   - POST /iot/message/post (消息处理)
   - GET /iot/message/encode (指令编码)
   - GET /iot/message/decode (指令解码)

3. 设备日志接口 ⭐⭐⭐
   - GET /iot/deviceLog/list (日志查询)
   - GET /iot/deviceLog/history (历史数据查询)
   - POST /data/center/deviceHistory (数据中心历史查询)
      </stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="HTTP_HOST" elementType="Argument">
            <stringProp name="Argument.name">HTTP_HOST</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
          </elementProp>
          <elementProp name="HTTP_PORT" elementType="Argument">
            <stringProp name="Argument.name">HTTP_PORT</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
          </elementProp>
          <elementProp name="USERNAME" elementType="Argument">
            <stringProp name="Argument.name">USERNAME</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
          </elementProp>
          <elementProp name="PASSWORD" elementType="Argument">
            <stringProp name="Argument.name">PASSWORD</stringProp>
            <stringProp name="Argument.value">admin123</stringProp>
          </elementProp>
          <elementProp name="MAX_DEVICES" elementType="Argument">
            <stringProp name="Argument.name">MAX_DEVICES</stringProp>
            <stringProp name="Argument.value">500000</stringProp>
          </elementProp>
          <elementProp name="AUTH_TOKEN" elementType="Argument">
            <stringProp name="Argument.name">AUTH_TOKEN</stringProp>
            <stringProp name="Argument.value">eyJhbGciOiJIUzUxMiJ9.eyJsb2dpbl91c2VyX2tleSI6IjgxOGZhN2FiLTNmNzktNDg4Yi1hNmExLTc5MDg4M2I3ZmYwMCJ9.U-nlQfcX25W6DyvsrDW9wS3eGJgSrKkONlg2hQpXxTc_7Yhk7qTPFknFVdJ65Oo3UbRrZHdPT3w5aojcwqiExQ</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>

      <!-- HTTP请求默认配置 -->
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <stringProp name="HTTPSampler.domain">${HTTP_HOST}</stringProp>
        <stringProp name="HTTPSampler.port">${HTTP_PORT}</stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.connect_timeout">30000</stringProp>
        <stringProp name="HTTPSampler.response_timeout">60000</stringProp>
      </ConfigTestElement>
      <hashTree/>

      <!-- HTTP请求头管理器 -->
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Bearer ${AUTH_TOKEN}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>

      <!-- 用户登录前置处理器 -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="用户登录认证" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlGui" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <!-- 用户登录接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户登录" enabled="true">
          <stringProp name="HTTPSampler.path">/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.postBodyRaw">{
    "username": "${USERNAME}",
    "password": "${PASSWORD}"
}</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <!-- 提取Token -->
          <JSONExtractor guiclass="JSONPostProcessorGui" testclass="JSONExtractor" testname="提取Token" enabled="true">
            <stringProp name="JSONExtractor.referenceNames">AUTH_TOKEN</stringProp>
            <stringProp name="JSONExtractor.jsonPathExpressions">$.token</stringProp>
            <stringProp name="JSONExtractor.match_numbers">1</stringProp>
            <stringProp name="JSONExtractor.default_values">default_token</stringProp>
          </JSONExtractor>
          <hashTree/>
        </hashTree>
      </hashTree>

      <!-- 1. 设备管理接口测试线程组 ⭐⭐⭐⭐⭐ -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="1. 设备管理接口测试 ⭐⭐⭐⭐⭐" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlGui" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">50</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1000</stringProp>
        <stringProp name="ThreadGroup.ramp_time">120</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay">5</stringProp>
      </ThreadGroup>
      <hashTree>

        <!-- 1.1 设备注册/添加接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.1 设备注册/添加接口 - POST /iot/device" enabled="true">
          <stringProp name="HTTPSampler.path">/iot/device</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.postBodyRaw">{
    "deviceName": "${__RandomString(8,abcdefghijklmnopqrstuvwxyz)}-${__Random(1,${MAX_DEVICES})}",
    "productId": ${__Random(1,6)},
    "userId": 1,
    "serialNumber": "${__RandomString(3,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}-${__Random(1000000000,9999999999)}",
    "firmwareVersion": "V${__Random(1,5)}.${__Random(0,9)}.${__Random(0,9)}",
    "status": 1,
    "deviceType": ${__Random(1,6)},
    "networkType": ${__Random(1,3)},
    "networkIp": "192.168.${__Random(1,255)}.${__Random(1,255)}",
    "isEnable": 1,
    "coordinate": "${__Random(116,117)}.${__Random(100,999)},${__Random(39,40)}.${__Random(100,999)}",
    "thingsModelValue": "{\"temperature\":{\"value\":${__Random(10,50)}},\"humidity\":{\"value\":${__Random(30,80)}}}"
}</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>

        <!-- 1.2 设备列表查询接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.2 设备列表查询接口 - GET /iot/device/list" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="pageNum" elementType="HTTPArgument">
                <stringProp name="Argument.value">${__Random(1,100)}</stringProp>
                <stringProp name="Argument.name">pageNum</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <stringProp name="Argument.value">50</stringProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
              <elementProp name="deviceName" elementType="HTTPArgument">
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.name">deviceName</stringProp>
              </elementProp>
              <elementProp name="deviceType" elementType="HTTPArgument">
                <stringProp name="Argument.value">${__Random(1,6)}</stringProp>
                <stringProp name="Argument.name">deviceType</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/iot/device/list</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>

        <!-- 1.3 设备详情查询接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.3 设备详情查询接口 - GET /iot/device/{deviceId}" enabled="true">
          <stringProp name="HTTPSampler.path">/iot/device/${__Random(1,${MAX_DEVICES})}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>

        <!-- 1.4 按序列号查询设备接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.4 按序列号查询设备 - GET /iot/device/getDeviceBySerialNumber/{serialNumber}" enabled="true">
          <stringProp name="HTTPSampler.path">/iot/device/getDeviceBySerialNumber/${__RandomString(3,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}-${__Random(1000000000,9999999999)}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>

        <!-- 1.5 设备运行状态查询接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.5 设备运行状态查询 - GET /iot/device/runningStatus" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="deviceId" elementType="HTTPArgument">
                <stringProp name="Argument.value">${__Random(1,${MAX_DEVICES})}</stringProp>
                <stringProp name="Argument.name">deviceId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/iot/device/runningStatus</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>

        <!-- 1.6 设备统计接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.6 设备统计接口 - GET /iot/device/statistic" enabled="true">
          <stringProp name="HTTPSampler.path">/iot/device/statistic</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>

        <!-- 1.7 设备状态重置接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.7 设备状态重置 - PUT /iot/device/reset/{serialNumber}" enabled="true">
          <stringProp name="HTTPSampler.path">/iot/device/reset/${__RandomString(3,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}-${__Random(1000000000,9999999999)}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>

      </hashTree>

      <!-- 2. 设备数据接口测试线程组 ⭐⭐⭐⭐⭐ (最高频) -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="2. 设备数据接口测试 ⭐⭐⭐⭐⭐ (最高频)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlGui" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">500</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2000</stringProp>
        <stringProp name="ThreadGroup.ramp_time">180</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">1200</stringProp>
        <stringProp name="ThreadGroup.delay">10</stringProp>
      </ThreadGroup>
      <hashTree>

        <!-- 2.1 设备数据上报接口 (最高频) -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.1 设备数据上报 - POST /iot/runtime/service/invoke (最高频)" enabled="true">
          <stringProp name="HTTPSampler.path">/iot/runtime/service/invoke</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.postBodyRaw">{
    "productId": ${__Random(1,6)},
    "deviceNumber": "${__RandomString(3,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}-${__Random(1000000000,9999999999)}",
    "service": "property",
    "method": "post",
    "data": {
        "temperature": ${__Random(10,50)}.${__Random(0,9)},
        "humidity": ${__Random(30,80)}.${__Random(0,9)},
        "pressure": ${__Random(1000,1200)}.${__Random(0,99)},
        "battery": ${__Random(50,100)},
        "signal_strength": -${__Random(40,80)},
        "timestamp": "${__time(yyyy-MM-dd HH:mm:ss,)}",
        "cpu_usage": ${__Random(20,80)}.${__Random(0,9)},
        "memory_usage": ${__Random(30,70)}.${__Random(0,9)},
        "location": {
            "lat": ${__Random(39,40)}.${__Random(800,999)},
            "lng": ${__Random(116,117)}.${__Random(300,500)}
        }
    }
}</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>

        <!-- 2.2 设备指令下发接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.2 设备指令下发 - POST /iot/runtime/service/invokeReply" enabled="true">
          <stringProp name="HTTPSampler.path">/iot/runtime/service/invokeReply</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.postBodyRaw">{
    "productId": ${__Random(1,6)},
    "deviceNumber": "${__RandomString(3,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}-${__Random(1000000000,9999999999)}",
    "service": "function",
    "method": "${__RandomFromMultipleVars(start_monitoring|stop_monitoring|reboot|reset|calibrate|set_parameters)}",
    "params": {
        "quality": "${__RandomFromMultipleVars(720P|1080P|4K)}",
        "duration": ${__Random(300,7200)},
        "enabled": ${__Random(true,false)},
        "timeout": 30000
    }
}</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>

        <!-- 2.3 设备消息处理接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.3 设备消息处理 - POST /iot/message/post" enabled="true">
          <stringProp name="HTTPSampler.path">/iot/message/post</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.postBodyRaw">{
    "deviceNumber": "${__RandomString(3,ABCDEFGHIJKLMNOPQRSTUVWXYZ)}-${__Random(1000000000,9999999999)}",
    "messageType": "${__RandomFromMultipleVars(alarm|status|data|event)}",
    "content": {
        "level": "${__RandomFromMultipleVars(info|warning|error)}",
        "message": "Device message ${__Random(1,1000)}",
        "timestamp": "${__time(yyyy-MM-dd HH:mm:ss,)}",
        "data": {
            "temperature": ${__Random(10,50)}.${__Random(0,9)},
            "status": "online"
        }
    }
}</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>

        <!-- 2.4 指令编码接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.4 指令编码 - GET /iot/message/encode" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="deviceType" elementType="HTTPArgument">
                <stringProp name="Argument.value">${__Random(1,6)}</stringProp>
                <stringProp name="Argument.name">deviceType</stringProp>
              </elementProp>
              <elementProp name="command" elementType="HTTPArgument">
                <stringProp name="Argument.value">read_data</stringProp>
                <stringProp name="Argument.name">command</stringProp>
              </elementProp>
              <elementProp name="data" elementType="HTTPArgument">
                <stringProp name="Argument.value">{"param1":"value1","param2":123}</stringProp>
                <stringProp name="Argument.name">data</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/iot/message/encode</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>

        <!-- 2.5 指令解码接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.5 指令解码 - GET /iot/message/decode" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="deviceType" elementType="HTTPArgument">
                <stringProp name="Argument.value">${__Random(1,6)}</stringProp>
                <stringProp name="Argument.name">deviceType</stringProp>
              </elementProp>
              <elementProp name="rawData" elementType="HTTPArgument">
                <stringProp name="Argument.value">01 03 00 00 00 02 C4 0B</stringProp>
                <stringProp name="Argument.name">rawData</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/iot/message/decode</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>

      </hashTree>

      <!-- 3. 设备日志接口测试线程组 ⭐⭐⭐ -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="3. 设备日志接口测试 ⭐⭐⭐" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlGui" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">500</stringProp>
        <stringProp name="ThreadGroup.ramp_time">90</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">600</stringProp>
        <stringProp name="ThreadGroup.delay">15</stringProp>
      </ThreadGroup>
      <hashTree>

        <!-- 3.1 设备日志查询接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.1 设备日志查询 - GET /iot/deviceLog/list" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="deviceId" elementType="HTTPArgument">
                <stringProp name="Argument.value">${__Random(1,${MAX_DEVICES})}</stringProp>
                <stringProp name="Argument.name">deviceId</stringProp>
              </elementProp>
              <elementProp name="pageNum" elementType="HTTPArgument">
                <stringProp name="Argument.value">${__Random(1,20)}</stringProp>
                <stringProp name="Argument.name">pageNum</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <stringProp name="Argument.value">50</stringProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="HTTPArgument">
                <stringProp name="Argument.value">2024-01-01</stringProp>
                <stringProp name="Argument.name">startTime</stringProp>
              </elementProp>
              <elementProp name="endTime" elementType="HTTPArgument">
                <stringProp name="Argument.value">${__time(yyyy-MM-dd,)}</stringProp>
                <stringProp name="Argument.name">endTime</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/iot/deviceLog/list</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>

        <!-- 3.2 设备历史数据查询接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.2 设备历史数据查询 - GET /iot/deviceLog/history" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="deviceId" elementType="HTTPArgument">
                <stringProp name="Argument.value">${__Random(1,${MAX_DEVICES})}</stringProp>
                <stringProp name="Argument.name">deviceId</stringProp>
              </elementProp>
              <elementProp name="startTime" elementType="HTTPArgument">
                <stringProp name="Argument.value">2024-01-01 00:00:00</stringProp>
                <stringProp name="Argument.name">startTime</stringProp>
              </elementProp>
              <elementProp name="endTime" elementType="HTTPArgument">
                <stringProp name="Argument.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                <stringProp name="Argument.name">endTime</stringProp>
              </elementProp>
              <elementProp name="dataType" elementType="HTTPArgument">
                <stringProp name="Argument.value">${__RandomFromMultipleVars(temperature|humidity|status|all)}</stringProp>
                <stringProp name="Argument.name">dataType</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/iot/deviceLog/history</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>

        <!-- 3.3 数据中心历史查询接口 -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.3 数据中心历史查询 - POST /data/center/deviceHistory" enabled="true">
          <stringProp name="HTTPSampler.path">/data/center/deviceHistory</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <stringProp name="HTTPSampler.postBodyRaw">{
    "deviceIds": [${__Random(1,${MAX_DEVICES})}],
    "startTime": "2024-01-01 00:00:00",
    "endTime": "${__time(yyyy-MM-dd HH:mm:ss,)}",
    "metrics": ["temperature", "humidity", "status"],
    "aggregation": "${__RandomFromMultipleVars(avg|max|min|sum)}"
}</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>

      </hashTree>

      <!-- 聚合报告 -->
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <stringProp name="filename">test-results/aggregate-report.csv</stringProp>
      </ResultCollector>
      <hashTree/>

      <!-- 查看结果树 -->
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="查看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <stringProp name="filename">test-results/view-results-tree.jtl</stringProp>
      </ResultCollector>
      <hashTree/>

      <!-- 响应时间图表 -->
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="响应时间图表" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <stringProp name="filename">test-results/response-times-graph.csv</stringProp>
      </ResultCollector>
      <hashTree/>

      <!-- TPS报告 -->
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="TPS报告" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <stringProp name="filename">test-results/tps-report.csv</stringProp>
      </ResultCollector>
      <hashTree/>

      <!-- 性能监控 -->
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="用表格查看结果" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <stringProp name="filename">test-results/results-table.csv</stringProp>
      </ResultCollector>
      <hashTree/>

    </hashTree>
  </hashTree>
</jmeterTestPlan>